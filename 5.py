# ТИП 1
# На вход алгоритма подаётся натуральное число N.
# Алгоритм строит по нему новое число R следующим образом.
# 1.Строится двоичная запись числа N.
# 2.К этой записи дописываются справа ещё два разряда по следующему правилу:
# а) складываются все цифры двоичной записи, и остаток от деления суммы на 2 дописывается в конец числа (справа). Например, запись 11100 преобразуется в запись 111001;
# б) над этой записью производятся те же действия— справа дописывается остаток от деления суммы цифр на 2.
# Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N) является двоичной записью искомого числа R.
# Укажите такое наименьшее число N, для которого результат работы алгоритма больше 80. В ответе это число запишите в десятичной системе счисления.'''for i in range(1,100):

'''for i in range(1, 100):
    n = str(bin(i))[2:]
    if n.count('1') > n.count('0') == 0:
        n += '1'
    if n.count('0') > n.count('1') or n.count('0') == n.count('1'):
        n += '0'
    if int(n, 2) > 43:
        print(i, n)
        break'''


# ТИП 2
#Автомат обрабатывает натуральное число N по следующему алгоритму:
#1.Строится двоичная запись числа N без ведущих нулей.
#2.Если в полученной записи единиц больше, чем нулей, то справа приписывается единица. Если нулей больше или нулей и единиц поровну, справа приписывается ноль.
#3.Полученное число переводится в десятичную запись и выводится на экран.
#Пример. Дано число N = 13. Алгоритм работает следующим образом.
#1.Двоичная запись числа N: 1101.
#2.записи больше единиц, справа приписывается единица: 11011.
#3.На экран выводится десятичное значение полученного числа 27.
#Какое наименьшее число, превышающее 80, может получиться в результате работы автомата?

'''for i in range(1, 100):
    n = str(bin(i))[2:]  # перевод в двоичную систему
    if n.count('1') > n.count('0'):
        n += '1'
    else:
        n += '0'
    r = int(n, 2)  # перевод в десятичную систему
    if r > 80:
        print(r)
        break'''


# ТИП 3
#Автомат обрабатывает натуральное число N (128 ≤ N ≤ 255) по следующему алгоритму:
#1.Строится восьмибитная двоичная запись числа N.
#2.Все цифры двоичной записи заменяются на противоположные (0 на 1, 1 на 0).
#3.Полученное число переводится в десятичную запись.
#4.Из исходного числа вычитается полученное, разность выводится на экран.
#Пример. Дано число N = 131. Алгоритм работает следующим образом:
#1.Восьмибитная двоичная запись числа N: 10000011.
#2.Все цифры заменяются на противоположные, новая запись: 01111100.
#3.Десятичное значение полученного числа: 124.
#4.На экран выводится число: 131 – 124 = 7.
#Какое число нужно ввести в автомат, чтобы в результате получилось 105?

'''for n in range(128, 256):
    s = str(bin(n))[2:]  # перевод в двоичную систему
    s = s.replace('1', '*')
    s = s.replace('0', '1')
    s = s.replace('*', '0')
    r = int(s, 2)  # перевод в десятичную систему
    if n - r == 105:
        print(n)'''


# ТИП 4
# Автомат получает на вход четырёхзначное число. По этому числу строится новое число по следующим правилам:
# 1.Перемножаются первая и вторая, а также третья и четвёртая цифры исходного числа.
# 2.Полученные два числа записываются друг за другом в порядке убывания (без разделителей).
# Пример. Исходное число: 2466. Произведения: 2 × 4 = 8; 6 × 6 = 36.
# Результат: 368.
# Укажите наименьшее число, в результате обработки которого автомат выдаст число 124.

'''for i in range(1000, 10000):
    s = str(i)
    k1 = int(s[0]) * int(s[1])
    k2 = int(s[2]) * int(s[3])
    first = str(max(k1, k2))
    second = str((min(k1, k2)))
    s1 = first + second
    if s1 == '124':
        print(i)
        break'''


# ТИП 5
#Автомат получает на вход трёхзначное число. По этому числу строится новое число по следующим правилам.
#1.Складываются отдельно первая и вторая цифры, а также вторая и третья цифры.
#2.Полученные два числа записываются друг за другом в порядке неубывания без разделителей.
#Пример. Исходное число: 872. Суммы: 8+7 = 15; 7+2 = 9. Результат: 915.
#Укажите наименьшее число, при обработке которого автомат выдаёт результат 812.

# ДЛЯ НАИМЕНЬШЕГО:

'''for i in range(100, 1000):
    s = str(i)
    k1 = int(s[0]) + int(s[1])
    k2 = int(s[1]) + int(s[2])
    first = str(min(k1, k2))
    second = str(max(k1, k2))
    s1 = first + second   # second + first , если в порядке УБЫВАНИЯ ; first + second , если в порядке НЕУБЫВАНИЯ(возрастания)
    if s1 == '159':
        print(i)
        break'''

'''for i in range(100, 1000):
    s = str(i)
    k1 = int(s[0]) + int(s[1])
    k2 = int(s[1]) + int(s[2])
    first = str(max(k1, k2))
    second = str(min(k1, k2))
    s1 = first + second
    if s1 == '159':
        print(i)
        break'''

# НАИБОЛЬШЕЕ
'''for i in range(1000, 100, -1):
    s = str(i) 
    k1 = int(s[0]) * int(s[1])
    k2 = int(s[1]) * int(s[2])
    first = str(min(k1, k2))
    second = str((max(k1, k2)))
    s1 = first + second
    if s1 == '621':
        print(i)
        break'''

# (сколько существует чисел...):

'''k = 0
for i in range(100, 1000):
    s = str(i)
    k1 = int(s[0]) + int(s[1])
    k2 = int(s[1]) + int(s[2])
    first = str(min(k1, k2))
    second = str((max(k1, k2)))
    s1 = first + second
    if s1 == '1216':
        k += 1
print(k)'''



# ТИП 6
#На вход алгоритма подаётся натуральное число N.
#Алгоритм строит по нему новое число R следующим образом.
#1)Строится двоичная запись числа N.
#2)К этой записи дописываются справа ещё два разряда по следующему правилу:
#а) находится остаток от деления на 2 суммы двоичных разрядов N, полученный результат дописывается в конец двоичной последовательности N.
#б) пункт а повторяется для вновь полученной последовательности.
#Полученная таким образом запись (в ней на два разряда больше, чем в записи исходного числа N) является двоичной записью искомого числа R. Укажите минимальное число R, которое превышает 123 и может являться результатом работы алгоритма. В ответе это число запишите в десятичной системе.


def f(s):
    summa = 0
    for i in range(len(s)):
        summa += int(s[i])
    return summa
for n in range(1, 100):
    s = bin(n)[2:]  # перевод в двоичную систему
    s = str(s)
    summa = f(s)
    s = s + str(summa % 2)
    summa = f(s)
    s = s + str(summa % 2)
    r = int(s, 2)  # перевод в десятичную систему
    if r > 52:
        print(r)
        break

'''
def f(s):
 summa = 0
 for i in range(len(s)):
 summa += int(s[i])
 return summa
for n in range(1, 100):
 s = bin(n)[2:] # перевод в двоичную систему
 s = str(s)
 summa = f(s)
 s = s + str(summa % 2)
 summa = f(s)
 s = s + str(summa % 2)
 r = int(s, 2) # перевод в десятичную систему
 if r > 43:
 print(r)
 break
'''  # для bin

'''k = 0
for i in range(100, 1000):
 s = str(i)
 k1 = int(s[0]) + int(s[1])
 k2 = int(s[1]) + int(s[2])
 first = str(max(k1, k2))
 second = str((min(k1, k2)))
 s1 = first + second
 if s1 == '1715':
 k += 1
print(k)'''  # для int

